{"name":"Moodle-logstore xAPI Plugin","tagline":"A logstore plugin implementing xAPI or TinCan.","body":"### About\r\n\r\n# What does it do?\r\n\r\n[Moodle Logstore xAPI](https://moodle.org/plugins/view/logstore_xapi) simply \"emits events from the Moodle Logstore as xAPI or TinCan statements\". For those that don't know, the Moodle Logstore is a log of activities in Moodle. When you view a course, complete a quiz, or grade a student a log of that activity is recorded in the Logstore. The plugin uses these logs to produce xAPI/TinCan statements and then sends (emits) them to an LRS (Learning Record Store) that you can configure.\r\n\r\n# How does it work?\r\n\r\nThe plugin is made up of three parts, an Expander, a Translator, and an Emitter. Every log entry goes through each of these parts in a six step process before finally reaching the LRS (see below).\r\n\r\n* The plugin passes the log entry from the logstore_standard_log to the Expander.\r\n* The Expander expands the log entry with data from your Moodle database.\r\n* The plugin passes the expanded event from step 2 to the Translator.\r\n* The Translator translates the expanded event to xAPI/TinCan recipe options.\r\n* The plugin passes the translated event from step 4 to the Emitter.\r\n* The Emitter constructs the translated event as an xAPI/TinCan statement and emits it to the LRS.\r\n\r\n---\r\n\r\n### Installation\r\n\r\nThis page contains a guide for users wanting to install the plugin. You obviously need to have [Moodle](https://moodle.org/) installed first and you need to be logged in as an Admin.\r\n\r\n1. Download the plugin. [Click here to begin download](../xapi.zip?raw=true).\r\n2. Go to \"http://www.example.com/admin/tool/installaddon/index.php\" (replacing \"www.example.com\" with your own domain).\r\n3. Drag and drop your download from step 1.\r\n4. Click \"Install plugin from the ZIP file\".\r\n5. Click \"Install plugin!\".\r\n6. Click \"Upgrade Moodle database now\".\r\n7. Click \"Continue\".\r\n8. Set your \"endpoint\" to your LRS endpoint (e.g. \"<http://demo.learninglocker.net/data/xAPI>\").\r\n9. Set your \"username\" to your LRS basic auth username (e.g. \"d416e6220812740d3922eb09813ebb4163e8eb3e\").\r\n10. Set your \"password\" to your LRS basic auth password (e.g. \"bc7e0a2edd5d1969b6d774e679d4eb4e7a35be13\").\r\n11. Click \"Save changes\".\r\n12. Go to \"http://www.example.com/admin/settings.php?section=managelogging\" (replacing \"www.example.com\" with your own domain).\r\n13. Enable the \"Logstore xAPI\" plugin.\r\n\r\n*Note that the above example LRS endpoint, username, and password utilise the [demo LRS](http://demo.learninglocker.net/) provided by [Learning Locker](http://learninglocker.net/). If you're utilising the demo LRS, you can login to the website with the email \"demouser@learninglocker.net\" and the password \"demouser\". Once logged in, you can view statements on the [\"Statements\" page for the \"Demo\" LRS](http://demo.learninglocker.net/lrs/554a45e98fbdd7cd406c171e/statements).*\r\n\r\n* If zip installation is disabled, you can unzip the zip file to moodle/admin/tool/log/store instead of steps 3 to 5 above.*\r\n\r\n*The settings you configured in steps 8, 9, and 10 can be changed by navigating to \"http://www.example.com/admin/settings.php?section=logsettingxapi\" (replacing \"www.example.com\" with your own domain).*\r\n\r\n---\r\n\r\n### Road Map\r\n\r\nComing soon!\r\n\r\n---\r\n\r\n### Style Guide\r\n\r\n`var_names`\r\n`methodNames`\r\n`ClassAndNamespaceNames`\r\n`CONST_NAMES`\r\n\r\n* Inline comments are one line and follow two line breaks (unless at the beginning of a block or at the end of a line).\r\n* All comments should adhere to English grammar and punctuation rules.\r\n* All methods should have docstrings (which may simply contain \"@override\").\r\n* Round brackets followed by curly brackets should on the same line separated by a space. For example:\r\n```\r\nif (...) {\r\n\r\n}\r\n```\r\n```\r\nmethodName(...) {\r\n\r\n}\r\n```\r\n* Else keyword should follow a closing curly bracket and a space on a single line. For example:\r\n```\r\n} else {\r\n```\r\n```\r\n} else if (...) {\r\n```\r\n* All non-empty cases in a switch statement should contain a break or return statement.\r\n* The first bracket of method calls or definitions should not have a space between the method name and the first bracket.\r\n* Strings should be single quotation. For example:`'hello world'` instead of `\"hello world\"`","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}